# Generated by Django 3.0.5 on 2020-05-03 15:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('employees', '0011_delete_historicalemployee'),
    ]

    operations = [
        migrations.AlterField(
            model_name='employee',
            name='department',
            field=models.ForeignKey(default=9, on_delete=django.db.models.deletion.PROTECT, to='employees.Department'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='position',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='department', chained_model_field='department', default=10, on_delete=django.db.models.deletion.CASCADE, to='employees.Position'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='province',
            field=models.ForeignKey(default=7, on_delete=django.db.models.deletion.PROTECT, to='employees.Province'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='site',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='province', chained_model_field='province', default=6, on_delete=django.db.models.deletion.CASCADE, to='employees.Site'),
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('hire_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Date Hired')),
                ('contract', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Contract Months')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, default=9, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.Department')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('position', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='department', chained_model_field='department', db_constraint=False, default=10, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.Position')),
                ('province', models.ForeignKey(blank=True, db_constraint=False, default=7, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.Province')),
                ('site', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='province', chained_model_field='province', db_constraint=False, default=6, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.Site')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
